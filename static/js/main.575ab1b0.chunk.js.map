{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["consumablesWeight","typeToDescription","rucksack","rain","overnight","overnight_cold_weather","swim","cooking","hydration","dark","comfort","safety","devices","necessities","App","useState","gear","map","it","type","gearTypeFilters","setGearTypeFilters","gearItemFilters","setGearItemFilters","consumablesWater","setConsumablesWater","consumablesToiletPaper","setConsumablesToiletPaper","consumablesToiletWetWipes","setConsumablesToiletWetWipes","consumablesGasSmall","setConsumablesGasSmall","consumablesGasMedium","setConsumablesGasMedium","consumablesTurmatMeals","setConsumablesTurmatMeals","gearItems","filter","includes","totalConsumablesWeight","totalWeight","item","name","length","reduce","previous","current","weight","className","class","gearType","index","isSelected","id","odd","undefined","value","checked","onChange","htmlFor","onClick","icon","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.575ab1b0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport gear from './gear.json'\nimport './App.css';\nimport FeatherIcon from 'feather-icons-react';\n\nconst consumablesWeight = {\n  water: 1,\n  gasBottleSmall: 0.1,\n  gasBottleMedium: 0.230,\n  toiletPaper: 0.1,\n  wetWipes: 0.2,\n  turmatMeal: 0.120\n}\n\nconst typeToDescription = {\n  rucksack: 'I carry my stuff',\n  rain: 'Rainy',\n  overnight: 'Overnighter',\n  overnight_cold_weather: 'Overnighter in cold weather',\n  swim: 'Swimming!',\n  cooking: 'Preparing meals',\n  hydration: 'Bring/carry water',\n  dark: 'It will be dark',\n  comfort: 'Comfort for my camp',\n  safety: 'The destination is not familiar to me',\n  devices: 'I need my devices',\n  necessities: 'Phone, keys etc.',\n}\n\nfunction App() {\n  const [gearTypeFilters, setGearTypeFilters] = useState(gear.map(it => it.type))\n  const [gearItemFilters, setGearItemFilters] = useState([])\n  const [consumablesWater, setConsumablesWater] = useState(0)\n  const [consumablesToiletPaper, setConsumablesToiletPaper] = useState(0)\n  const [consumablesToiletWetWipes, setConsumablesToiletWetWipes] = useState(0)\n  const [consumablesGasSmall, setConsumablesGasSmall] = useState(0)\n  const [consumablesGasMedium, setConsumablesGasMedium] = useState(0)\n  const [consumablesTurmatMeals, setConsumablesTurmatMeals] = useState(0)\n  const gearItems = gear.filter(it => gearTypeFilters.includes(it.type))\n  const totalConsumablesWeight = (consumablesWater * consumablesWeight.water) + (consumablesGasSmall * consumablesWeight.gasBottleSmall) + (consumablesGasMedium * consumablesWeight.gasBottleMedium) + (consumablesToiletPaper * consumablesWeight.toiletPaper) + (consumablesToiletWetWipes * consumablesWeight.wetWipes) + (consumablesTurmatMeals * consumablesWeight.turmatMeal)\n  const totalWeight = gearItems\n    .filter(it => gearTypeFilters.includes(it.type))\n    .filter(it => gearItemFilters.filter(item => item.name === it.name).length !== 0)\n    .reduce((previous, current) => previous + current.weight, totalConsumablesWeight)\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\"><h4>What kind of trip?</h4></div>\n      <div className=\"content\">\n      <table class=\"pure-table\">\n          <tbody>\n      {gear\n        .map(it => it.type)\n        .reduce((previous, current) => previous.includes(current) ? previous : [...previous, current], [])\n        .map((gearType, index) => {\n          const isSelected = gearTypeFilters.includes(gearType)\n          const id = `gear-filter-stage-1-${gearType}`\n          const onChange = () => isSelected ? setGearTypeFilters(gearTypeFilters.filter(it => it !== gearType)) : setGearTypeFilters([...gearTypeFilters, gearType])\n          const odd = index % 2 !== 0\n\n          return (\n            <tr className={odd ?  'pure-table-odd' : undefined}  key={`key-${id}`}>\n              <td>\n                <input\n                  id={id}\n                  type=\"checkbox\"\n                  value={gearType}\n                  name={gearType}\n                  checked={isSelected}\n                  onChange={onChange} />\n              </td>\n              <td>\n                <label htmlFor={id}>{typeToDescription[gearType] ? typeToDescription[gearType] : gearType}</label>\n              </td>\n            </tr>\n          )\n        })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"title\"><h4>Base weight</h4><button className=\"button-secondary pure-button\" onClick={() => setGearItemFilters(gearItems)}>Select all</button></div>\n      <table class=\"pure-table\">\n          <tbody>\n            {gearItems.map((item, index) => {\n              const id = `gear-filter-stage-2-${item.name}`\n              const isSelected = gearItemFilters.filter(it => it.name === item.name).length !== 0 ? true : false \n              const onChange = () => isSelected ? setGearItemFilters(gearItemFilters.filter(it => it.name !== item.name)) : setGearItemFilters([...gearItemFilters, item])\n              const odd = index % 2 !== 0\n\n              return (\n                <tr className={odd ?  'pure-table-odd' : undefined} key={`key-${id}`}>\n                  <td>\n                  <input\n                    id={id}\n                    type=\"checkbox\"\n                    value={item.name}\n                    name={item.name}\n                    checked={isSelected}\n                    onChange={onChange} />\n                  </td>\n                  <td><label htmlFor={id}>{item.name}</label></td>\n                  <td>{item.weight}</td>\n              </tr>\n              )\n            })}\n          </tbody>\n      </table>\n\n      <div className=\"title\"><h4>Consumables</h4></div>\n      <table class=\"pure-table\">\n          <tbody>\n            <tr>\n              <td>\n                <button onClick={() => setConsumablesWater(consumablesWater + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button onClick={() => setConsumablesWater(consumablesWater > 0 ? consumablesWater - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesWater} liter of water</span>\n              </td>\n              <td>{consumablesWeight.water}</td>\n            </tr>\n            <tr className=\"pure-table-odd\">\n              <td>\n                <button  onClick={() => setConsumablesGasSmall(consumablesGasSmall + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button onClick={() => setConsumablesGasSmall(consumablesGasSmall > 0 ? consumablesGasSmall - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesGasSmall} small gas bottles)</span>\n              </td>\n              <td>{consumablesWeight.gasBottleSmall}</td>\n            </tr>\n            <tr>\n              <td>\n                <button  onClick={() => setConsumablesGasMedium(consumablesGasMedium + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button  onClick={() => setConsumablesGasMedium(consumablesGasMedium > 0 ? consumablesGasMedium - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesGasMedium} medium gas bottles (256g)</span>\n              </td>\n              <td>{consumablesWeight.gasBottleMedium}</td>\n            </tr>\n            <tr className=\"pure-table-odd\">\n              <td>\n                <button  onClick={() => setConsumablesTurmatMeals(consumablesTurmatMeals + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button  onClick={() => setConsumablesTurmatMeals(consumablesTurmatMeals> 0 ? consumablesTurmatMeals - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesTurmatMeals} packs of Turmat meals</span>\n              </td>\n              <td>{consumablesWeight.turmatMeal}</td>\n            </tr>\n            <tr>\n              <td>\n                <button  onClick={() => setConsumablesToiletPaper(consumablesToiletPaper + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button  onClick={() => setConsumablesToiletPaper(consumablesToiletPaper > 0 ? consumablesToiletPaper - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesToiletPaper} rolls of toilet paper</span>\n              </td>\n              <td>{consumablesWeight.toiletPaper}</td>\n            </tr>\n            <tr className=\"pure-table-odd\">\n              <td>\n                <button  onClick={() => setConsumablesToiletWetWipes(consumablesToiletWetWipes + 1)}><FeatherIcon icon=\"plus-circle\" /></button>\n                <button onClick={() => setConsumablesToiletWetWipes(consumablesToiletWetWipes > 0 ? consumablesToiletWetWipes - 1 : 0)}><FeatherIcon icon=\"minus-circle\" /></button>\n              </td>\n              <td>\n                <span className=\"consumables-label\">{consumablesToiletWetWipes} packs of wet wipes (50pc)</span>\n              </td>\n              <td>{consumablesWeight.wetWipes}</td>\n            </tr>\n          </tbody>\n      </table>\n\n      <div className=\"title\"><strong>Total</strong> {totalWeight.toFixed(2)}kg</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}